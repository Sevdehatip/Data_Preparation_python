# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sltdUGbakeL4H7IerFf8ojXsOgHt5SwV
"""

import seaborn as sns
df=sns.load_dataset('diamonds')  #diamonds veri setini çekme
df=df.select_dtypes(include=['float64', 'int64']) #içerisindeki sayısal değerlere ulaşma
df=df.dropna() #eksik verileri siliyoruz
df.head()

df_table=df["table"]
df_table.head()

sns.boxplot(x=df_table);

#aykırı değerlerin bulunabilmesi için öncelikle eşik değerlerinin bulunması gerekir.
Q1=df_table.quantile(0.25)
Q3=df_table.quantile(0.75)
IQR=Q3-Q1  #3. çeyrek değerden 1.çeyrek değer çıkar

Q1

Q3

IQR

alt_sinir=Q1-1.5*IQR
ust_sinir=Q3+1.5*IQR

alt_sinir

ust_sinir

(df_table<alt_sinir) | (df_table>ust_sinir) #belirlenen alt ve ust sınırlara göre koşul

aykiri_tf=(df_table<alt_sinir) 
aykiri_tf.head()

df_table[aykiri_tf] #alt sınırdakilerin sayıları getirilmiş olur.

###Silme

import pandas as pd
type(df_table)

df_table=pd.DataFrame(df_table)
df_table.shape

clean_df=df_table[~((df_table<(alt_sinir)) | (df_table>(ust_sinir))).any(axis=1)]  # ~ koşulu sağlamayanları al demektir

clean_df.shape

###Ortalama ile doldurma

import seaborn as sns
df=sns.load_dataset('diamonds')  #diamonds veri setini çekme
df=df.select_dtypes(include=['float64', 'int64']) #içerisindeki sayısal değerlere ulaşma
df=df.dropna() #eksik verileri siliyoruz
df.head()

df_table=df["table"]
df_table.head()

aykiri_tf.head()

df_table[aykiri_tf]

df_table.mean()

df_table[aykiri_tf]=df_table.mean()  #değerler atılmak istenmezse ortalama değer ile tamamlanması sağlanır.

###Baskılama Yöntemi

import seaborn as sns
df=sns.load_dataset('diamonds')  #diamonds veri setini çekme
df=df.select_dtypes(include=['float64', 'int64']) #içerisindeki sayısal değerlere ulaşma
df=df.dropna() #eksik verileri siliyoruz
df.head()

df_table=df["table"]
df_table[aykiri_tf]

alt_sinir

df_table[aykiri_tf]=alt_sinir #alt sınırdakileri eşik değerine eşitlemek için

df_table[aykiri_tf]